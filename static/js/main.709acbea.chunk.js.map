{"version":3,"sources":["Exercise1.1.js","Exercise1.2.js","Exercise1.3.js","index.js"],"names":["App","React","useState","firstname","setFirstname","middlename","setMiddlename","lastname","setLastname","checkedmiddlename","setcheckedMiddlename","Paper","style","width","margin","marginTop","padding","textAlign","display","justifyContent","alignitems","FormControl","variant","FormLabel","component","TextField","id","value","onChange","event","target","disabled","FormControlLabel","control","Checkbox","checked","label","color","onClick","Ap","number1","setNumber1","number2","setNumber2","number3","setNumber3","number4","setNumber4","number5","setNumber5","number6","setNumber6","number7","setNumber7","number8","setNumber8","screenvalue","setScreenvalue","box","setBox","updatescreenvalue","e","bit","newScreenvalue","split","join","Box","Button","parseInt","A","clickMessage","setClickMessage","moveMessage","setMoveMessage","wheelMessage","setWheelMessage","onMouseDown","buttons","onMouseMove","clientX","clientY","onWheel","deltaY","fullWidth","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.709acbea.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { FormControlLabel } from '@material-ui/core';\n\n\n\n\nfunction App() {\n    const [firstname, setFirstname] = React.useState('');\n    const [middlename, setMiddlename] = React.useState('');\n    const [lastname, setLastname] = React.useState('');\n    const [checkedmiddlename, setcheckedMiddlename] = React.useState(true);\n\n    const updateFirstname= (event) => {\n        setFirstname(event.target.value);\n    };\n\n    const updateMiddlename= (event) => {\n        setMiddlename(event.target.value);\n    };\n\n    const updateLastname= (event) => {\n        setLastname(event.target.value);\n    };\n    const handleChange = (event) => {\n        setcheckedMiddlename(event.target.checkedmiddlename)\n    };\n    const remove = (event) => {\n        setFirstname(\"\");\n        setMiddlename(\"\");\n        setLastname(\"\");\n    };\n\n    const autoFill = (event) => {\n        setFirstname(\"Femi\");\n        setMiddlename(\"Adesola\");\n        setLastname(\"Oyinloye\");\n    };\n        return (\n            <Paper style={{ width: 500, margin: 30, marginTop: 50, padding: 50, textAlign: 'center', }}>\n               <box style={{display:\"block\", justifyContent:\"center\", alignitems:\"center\", padding: 10,}}>\n                    <FormControl variant=\"filled\">\n                        <FormLabel component=\"legend\">First name <TextField id=\"firstname\" value={firstname} onChange={updateFirstname} /></FormLabel>\n                    </FormControl>\n                \n                    <FormControl variant=\"filled\">\n                        <FormLabel component=\"legend\">Middle name <TextField id=\"middlename\" value={middlename} onChange={updateMiddlename} disabled={checkedmiddlename }/></FormLabel>\n                    </FormControl>\n                    <box style={{display:\"block\", justifyContent:\"center\", alignitems:\"center\", padding: 10,}}>\n                        <FormControlLabel control={\n                            <Checkbox onChange={handleChange} checked={checkedmiddlename} />} label=\"Middle name\"\n                       />\n                    </box>\n                 \n                    <FormControl variant=\"filled\">\n                        <FormLabel component=\"legend\">Last name <TextField id=\"lastname\" value={lastname} onChange={updateLastname} /></FormLabel>\n                    </FormControl>\n                </box>\n                <box style={{display:\"block\", justifyContent:\"center\", alignitems:\"center\", padding: 10,}}>\n                    <button variant=\"contained\" color=\"secondary\" id={\"autofill\"} onClick={autoFill}>\n                        Autofill\n                </button>\n                </box>\n                <box style={{display:\"block\", justifyContent:\"center\", alignitems:\"center\", padding: 10,}}>\n                    <button variant=\"contained\" color=\"secondary\" onClick={remove}>Remove</button>\n                </box>\n            \n\n            </Paper>\n           \n        );\n    \n    \n    }\n\nexport default App;\n","import React from 'react';\nimport './App.css';\nimport TextField from '@material-ui/core/TextField';\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { green, } from '@material-ui/core/colors';\nimport { Typography } from '@material-ui/core';\n\n\nfunction Ap() {\n    const [number1, setNumber1] = React.useState(0);\n    const [number2, setNumber2] = React.useState(0);\n    const [number3, setNumber3] = React.useState(0);\n    const [number4, setNumber4] = React.useState(0);\n    const [number5, setNumber5] = React.useState(0);\n    const [number6, setNumber6] = React.useState(0);\n    const [number7, setNumber7] = React.useState(0);\n    const [number8, setNumber8] = React.useState(0);\n    const [screenvalue, setScreenvalue] = React.useState('00000000');\n    const [box, setBox] = React.useState();\n    \n    const remove = (event) => {\n        setBox(\"\");\n    }\n\n    //https://www.w3schools.com/js/js_switch.asp\n    const updatescreenvalue = (e, bit) => {\n        const checked = e.target.checked;\n        switch (bit) {\n\n            case 0:\n                setNumber1(checked);\n                break;\n            case 1:\n                setNumber2(checked);\n                break;\n            case 2:\n                setNumber3(checked);\n                break;\n            case 3:\n                setNumber4(checked);\n                break;\n            case 4:\n                setNumber5(checked);\n                break;\n            case 5:\n                setNumber6(checked);\n                break;\n            case 6:\n                setNumber7(checked);\n                break;\n            case 7:\n                setNumber8(checked);\n        }\n\n        let newScreenvalue = screenvalue.split('');\n        checked ? newScreenvalue[bit] = 1 : newScreenvalue[bit] =0;\n        setScreenvalue(newScreenvalue.join(''));\n        \n    }\n    const convert = () => setBox(parseInt(screenvalue, 2));\n    return (\n        <Paper style={{ width: 540, margin: 30, marginTop: 20, padding: 30, textAlign: 'center', }}>\n            \n            <box style={{ width: 500, margin: 30, marginTop: 5, padding: 10, textAlign: 'center', }}>\n                <TextField disabled={true} value={screenvalue} />\n            </box>\n            \n            <Box>\n                    \n                <Checkbox checked={number1} onChange={(e) => updatescreenvalue(e, 0)}></Checkbox >\n                <Checkbox checked={number2} onChange={(e) => updatescreenvalue(e, 1)}></Checkbox >\n                <Checkbox checked={number3} onChange={(e) => updatescreenvalue(e, 2)}></Checkbox >\n                <Checkbox checked={number4} onChange={(e) => updatescreenvalue(e, 3)}></Checkbox >\n                <Checkbox checked={number5} onChange={(e) => updatescreenvalue(e, 4)}></Checkbox >\n                <Checkbox checked={number6} onChange={(e) => updatescreenvalue(e, 5)}></Checkbox >\n                <Checkbox checked={number7} onChange={(e) => updatescreenvalue(e, 6)}></Checkbox >\n                <Checkbox checked={number8} onChange={(e) => updatescreenvalue(e, 7)}></Checkbox >\n            </Box>\n            <box style={{ width: 500, marginTop: 10, padding: 40, textAlign: 'center', }}>\n                <Button variant=\"contained\" color=\"secondary\" onClick={convert}>Converter</Button>\n            </box>\n            <Box style={{ width: 500, margin: 10, marginTop: 5, padding: 5, textAlign: 'center', }}>\n                <TextField id=\"binarynumber\" disabled={true} variant=\"outlined\" value={box} />\n            </Box>\n            <box style={{display:\"block\", justifyContent:\"center\", alignitems:\"center\", padding: 10,}}>\n                    <button variant=\"contained\" color=\"secondary\" onClick={remove}>Remove Numbers</button>\n                </box>\t\n        </Paper>  \n    );\n}\nexport default Ap;","import React from 'react';\r\nimport './App.css';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Box from '@material-ui/core/Box';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nfunction A() {\r\n\tconst [clickMessage, setClickMessage] = React.useState(\"\");\r\n\tconst [moveMessage, setMoveMessage] = React.useState(\"\");\r\n\tconst [wheelMessage, setWheelMessage] = React.useState(\"\");\r\n\t\r\n\tconst clickUpdate = (event) => {\r\n\t\tsetClickMessage(\"Mouse was clicked: button \" + event.buttons);\r\n\t}\r\n\t\r\n\tconst moveUpdate = (event) => {\r\n\t\tsetMoveMessage(\"Mouse moved to \" + event.clientX + \", \" + event.clientY);\r\n\t}\r\n\t\r\n\tconst wheelUpdate = (event) => {\r\n\t\tsetWheelMessage(\"Wheel moved \" + event.deltaY);\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<Box onMouseDown={clickUpdate} onMouseMove={moveUpdate} onWheel={wheelUpdate}>\r\n\t\t\t<Paper style={{width: 560, margin:'30px', padding:'20px', textAlign: 'center',}}>\r\n\t\t\t\t<Box><TextField id={\"clickMessage\"} disabled={true} variant=\"outlined\" fullWidth value={clickMessage} /></Box>\r\n\t\t\t\t<Box><TextField id={\"moveMessage\"} disabled={true} variant=\"outlined\" fullWidth value={moveMessage} /></Box>\r\n\t\t\t\t<Box><TextField id={\"wheelMessage\"} disabled={true} variant=\"outlined\" fullWidth value={wheelMessage} /></Box>\r\n\t\t\t</Paper>\r\n\t\t</Box>\r\n\t);\r\n}\r\n\r\nexport default A;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Exercise1.1';\nimport Ap from './Exercise1.2';\nimport A from './Exercise1.3';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    <Ap />\n    <A />\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}